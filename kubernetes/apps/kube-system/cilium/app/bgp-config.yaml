---
# BGP Configuration for MikroTik Integration - TESTED AND WORKING
# ASNs: MikroTik=64513, Kubernetes=64514
apiVersion: cilium.io/v2
kind: CiliumBGPClusterConfig
metadata:
  name: mikrotik-bgp-cluster-config
spec:
  nodeSelector:
    matchLabels: {}  # Apply to all nodes
  bgpInstances:
  - name: "mikrotik-bgp-instance"
    localASN: 64514  # Matches current working Cilium configuration
    peers:
    - name: "mikrotik-router"
      peerASN: 64513   # Matches MikroTik configuration
      peerAddress: "172.16.20.1"
      # families:
      # - afi: ipv4
      #   safi: unicast
      #   advertisements:
      #     matchLabels:
      #       advertise-pod-cidr: "true"
      #       advertise-lb-service: "true"
---
apiVersion: cilium.io/v2
kind: CiliumBGPPeer
metadata:
  name: mikrotik-router-peer
  namespace: kube-system
spec:
  instanceSelector:
    matchLabels:
      cilium.io/bgp-instance: mikrotik-bgp-instance
  peerSelector:
    matchLabels:
      cilium.io/bgp-peer: mikrotik-router
  families:
    - afi: ipv4
      safi: unicast
      advertisements:
        - matchLabels:
            advertise-pod-cidr: "true"
            advertise-lb-service: "true"
---
# BGP Advertisement for Pod CIDR
apiVersion: cilium.io/v2
kind: CiliumBGPAdvertisement
metadata:
  name: pod-cidr-advertisement
  labels:
    advertise-pod-cidr: "true"
spec:
  advertisements:
  - advertisementType: "PodCIDR"
---
# BGP Advertisement for LoadBalancer Services
apiVersion: cilium.io/v2
kind: CiliumBGPAdvertisement
metadata:
  name: loadbalancer-advertisement
  labels:
    advertise-lb-service: "true"
spec:
  advertisements:
  - advertisementType: "Service"
    service:
      addresses:
      - LoadBalancerIP
      - ExternalIP
    selector:
      matchLabels:
        io.kubernetes.service/type: LoadBalancer
---
# Load Balancer IP Pool - matches working range
apiVersion: cilium.io/v2
kind: CiliumLoadBalancerIPPool
metadata:
  name: mikrotik-lb-pool
spec:
  blocks:
  - cidr: "172.16.20.220/30"  # Current working range: .220-.223
  serviceSelector:
    matchLabels:
      io.kubernetes.service/type: LoadBalancer
